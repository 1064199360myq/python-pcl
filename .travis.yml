# 'sudo' is enabled automatically by the 'apt' addon below.
#sudo: false 
sudo: required


# https://docs.travis-ci.com/user/languages/python/#running-python-tests-on-multiple-operating-systems
matrix:
  include:
    # gcc
    - name: "Python 2.7 on Trusty Linux use pcl 1.7"
      dist: trusty
      language: python
      python: "2.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - build-essential
            - gcc-4.9
            - g++-4.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - name: "Python 3.5 on Trusty Linux use pcl 1.7"
      dist: trusty
      language: python
      python: "3.5"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - build-essential
            - gcc-4.9
            - g++-4.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - name: "Python 3.6 on Trusty Linux use pcl 1.7"
      dist: trusty
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - build-essential
            - gcc-4.9
            - g++-4.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - name: "Python 3.7.1 on Xenial Linux use pcl 1.7"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - build-essential
            - gcc-4.9
            - g++-4.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - name: "Python 3.7.1 on Xenial Linux use pcl 1.8"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - g++-4.9
      env:
      - PCL_VERSION="1.8"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    - name: "Python 3.7.1 on Xenial Linux use pcl 1.9"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - g++-4.9
      env:
      - PCL_VERSION="1.9"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
    # clang
    - name: "Python 2.7 on Trusty Linux use pcl 1.7(clang)"
      dist: trusty
      language: python
      python: "2.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=g++-3.9"
    - name: "Python 3.5 on Trusty Linux use pcl 1.7(clang)"
      dist: trusty
      language: python
      python: "3.5"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - name: "Python 3.6 on Trusty Linux use pcl 1.7(clang)"
      dist: trusty
      language: python
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="trusty"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - name: "Python 3.7 on Xenial Linux use pcl 1.7(clang)"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.7"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - name: "Python 3.7 on Xenial Linux use pcl 1.8(clang)"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.8"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    - name: "Python 3.7 on Xenial Linux use pcl 1.9(clang)"
      dist: xenial   # required for Python >= 3.7
      language: python
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - openni2-utils
            - clang-3.9
            - clang++-3.9
      env:
      - PCL_VERSION="1.9"
      - OS_VERSION="xenial"
      - NOSEATTR="not pcl_ver_0_4 and not pcl_over_18"
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
    # TravisCI TimeLimit 50min
    # clang only(gcc replace clang)
    # homebrew pcl use gcc compiler
    - name: "Python 2.7.16 on macOS"
      os: osx
      language: generic # 'language: python' is an error on Travis CI macOS
      env:
      - PYTHON_VERSION=2.7.16
      - PYENV_ROOT=~/.pyenv
      - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
      - NOSEATTR="not pcl_ver_0_4"
    - name: "Python 3.5.7 on macOS"
      os: osx
      language: generic # 'language: python' is an error on Travis CI macOS
      env:
      - PYTHON_VERSION=3.5.7
      - PYENV_ROOT=~/.pyenv
      - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
      - NOSEATTR="not pcl_ver_0_4"
    - name: "Python 3.6.8 on macOS"
      os: osx
      language: generic # 'language: python' is an error on Travis CI macOS
      env:
      - PYTHON_VERSION=3.6.8
      - PYENV_ROOT=~/.pyenv
      - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
      - NOSEATTR="not pcl_ver_0_4"
    - name: "Python 3.7.3 on macOS"
      os: osx
      language: generic # 'language: python' is an error on Travis CI macOS
      env:
      - PYTHON_VERSION=3.7.3
      - PYENV_ROOT=~/.pyenv
      - PATH=$PYENV_ROOT/shims:$PATH:$PYENV_ROOT/bin
      - NOSEATTR="not pcl_ver_0_4"


cache:
  - pip
  - ccache
  directories:
    - $HOME/Library/Caches/Homebrew


before_cache:
  - brew cleanup


# (Mac OSX using pcl 1.9.1 only [homebrew])
# eval "${MATRIX_EVAL}";
# trusty(pcl-1.7.0?)
# sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl -y;
# sudo apt-get update -y;
# sudo apt-get install libpcl-all -y;
# use Ubuntu official package(Ubuntu 16.04 use pcl 1.7.2)
# sudo apt-get install libpcl-dev -y;
# sudo apt install git build-essential linux-libc-dev cmake cmake-gui libusb-1.0-0-dev libusb-dev libudev-dev mpi-default-dev openmpi-bin openmpi-common libflann1.8 libflann-dev libeigen3-dev libboost-all-dev libqhull* libgtest-dev freeglut3-dev pkg-config libxmu-dev libxi-dev mono-complete qt-sdk openjdk-8-jdk openjdk-8-jre libproj-dev libglfw3-dev;
before_install:
  - if [ ${TRAVIS_OS_NAME} = "osx" ]; then
      brew update >/dev/null;
      brew install ccache;

      PYTHON_CONFIGURE_OPTS="--enable-unicode=ucs2" pyenv install -ks $PYTHON_VERSION;
      pyenv global $PYTHON_VERSION;
      python --version;

      travis_wait 45 brew install pcl --without-qt;
    fi
  - if [[ ( "$TRAVIS_OS_NAME" == "linux" ) && ( "$PCL_VERSION" == "1.7" ) && ( "$OS_VERSION" == "trusty") ]]; then
        sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/pcl -y;
        sudo apt -y update;
        sudo apt -y install libpcl-all;
    fi
  - if [[ ( "$TRAVIS_OS_NAME" == "linux" ) && ( "$PCL_VERSION" == "1.7" ) && ( "$OS_VERSION" == "xenial") ]]; then
      sudo apt -y install git build-essential linux-libc-dev cmake cmake-gui libusb-1.0-0-dev libusb-dev libudev-dev mpi-default-dev openmpi-bin openmpi-common libflann1.8 libflann-dev libeigen3-dev libboost-all-dev libqhull* libgtest-dev freeglut3-dev pkg-config libxmu-dev libxi-dev mono-complete qt-sdk openjdk-8-jdk openjdk-8-jre libproj-dev libglfw3-dev;
      sudo apt -y install libpcl-dev;
    fi
  - if [[ ( "$TRAVIS_OS_NAME" == "linux" ) && ( "$PCL_VERSION" == "1.8" ) ]]; then
      sudo add-apt-repository -y ppa:webupd8team/java && sudo apt update && sudo apt -y install oracle-java8-installer;

      sudo apt-get install zram-config;

      sudo apt -y install g++ doxygen mpi-default-dev openmpi-bin openmpi-common libusb-1.0-0-dev libqhull* libusb-dev libgtest-dev;
      sudo apt -y install git-core freeglut3-dev pkg-config build-essential libxmu-dev libxi-dev libphonon-dev libphonon-dev phonon-backend-gstreamer;
      sudo apt -y install phonon-backend-vlc graphviz mono-complete qt-sdk libflann-dev libflann1.8 libboost-all-dev libeigen3-dev;

      wget --no-check-certificate -qO- http://www.cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz -O /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      tar -xvf /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      export PATH=$PWD/cmake-3.6.2-Linux-x86_64/bin/:$PATH;

      sudo dd if=/dev/zero of=/swapfile bs=1024 count=4194304;
      sudo mkswap /swapfile;
      sudo swapon /swapfile;

      sudo apt-get install ninja-build;

      wget https://github.com/PointCloudLibrary/pcl/archive/pcl-1.8.1.tar.gz;
      tar -xf pcl-1.8.1.tar.gz;
      cd pcl-pcl-1.8.1 && mkdir build && cd build;
      cmake -G Ninja -DWITH_OPENGL:BOOL=OFF -DWITH_FZAPI:BOOL=OFF -DWITH_LIBUSB:BOOL=OFF -DWITH_VTK:BOOL=OFF -DBUILD_OPENNI:BOOL=OFF -DBUILD_OPENNI2:BOOL=OFF -DBUILD_apps:BOOL=OFF -DBUILD_geometry:BOOL=OFF -DBUILD_global_tests:BOOL=OFF -DBUILD_outofcore:BOOL=OFF -DBUILD_people:BOOL=OFF -DBUILD_tools:BOOL=OFF -DBUILD_tracking:BOOL=OFF -DBUILD_visualization:BOOL=OFF -DBUILD_examples:BOOL=OFF ..;

      travis_wait 50 ninja -j4;
      sudo ninja -t targets install;
      cd ../..;
    fi
  - if [[ ( "$TRAVIS_OS_NAME" == "linux" ) && ( "$PCL_VERSION" == "1.9" ) ]]; then
      sudo add-apt-repository -y ppa:webupd8team/java && sudo apt update && sudo apt -y install oracle-java8-installer;

      sudo apt-get install zram-config;

      sudo apt -y install g++ doxygen mpi-default-dev openmpi-bin openmpi-common libusb-1.0-0-dev libqhull* libusb-dev libgtest-dev;
      sudo apt -y install git-core freeglut3-dev pkg-config build-essential libxmu-dev libxi-dev libphonon-dev libphonon-dev phonon-backend-gstreamer;
      sudo apt -y install phonon-backend-vlc graphviz mono-complete qt-sdk libflann-dev libflann1.8 libboost-all-dev libeigen3-dev;

      wget --no-check-certificate -qO- http://www.cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz -O /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      tar -xvf /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      export PATH=$PWD/cmake-3.6.2-Linux-x86_64/bin/:$PATH;

      sudo dd if=/dev/zero of=/swapfile bs=1024 count=4194304;
      sudo mkswap /swapfile;
      sudo swapon /swapfile;

      sudo apt-get install ninja-build;

      wget https://github.com/PointCloudLibrary/pcl/archive/pcl-1.9.1.tar.gz;
      tar -xf pcl-1.9.1.tar.gz;
      cd pcl-1.9.1 && mkdir build && cd build;
      cmake -G Ninja -DWITH_OPENGL:BOOL=OFF -DWITH_FZAPI:BOOL=OFF -DWITH_LIBUSB:BOOL=OFF -DWITH_VTK:BOOL=OFF -DBUILD_OPENNI:BOOL=OFF -DBUILD_OPENNI2:BOOL=OFF -DBUILD_apps:BOOL=OFF -DBUILD_geometry:BOOL=OFF -DBUILD_global_tests:BOOL=OFF -DBUILD_outofcore:BOOL=OFF -DBUILD_people:BOOL=OFF -DBUILD_tools:BOOL=OFF -DBUILD_tracking:BOOL=OFF -DBUILD_visualization:BOOL=OFF -DBUILD_examples:BOOL=OFF ..;

      travis_wait 50 ninja -j4;
      sudo ninja -t targets install;
      cd ../..;
    fi

install:
  - pip install --upgrade pip
  - pip install -r requirements.txt
  - pip install nose
  # coveralls
  - pip install pytest
  - pip install coveralls

  - python setup.py build_ext -i
  - python setup.py install

# command to run tests
script:
  # - coverage run --parallel-mode tests/test_pcl.py
  # - coverage run --parallel-mode tests/test_registration.py
  # - nosetests -A "$NOSEATTR" --with-coverage --cover-erase --cover-package=python-pcl --verbose
  # - nosetests -A "not pcl_ver_0_4 and not pcl_over_18" --with-coverage --cover-erase --cover-package=python-pcl --verbose
  - nosetests -A "not pcl_ver_0_4 and not pcl_over_18" --verbose
  # - py.test --cov pcl
  # examples
  # - python examples/GrabberCallbackTest.py
  # examples/official
  # - python examples/official/grabber/openni_grabber.py
  # # examples_command_172.txt
  # # Filtering
  # - python examples/official/Filtering/PassThroughFilter.py
  # - python examples/official/Filtering/project_inliers.py
  # - python examples/official/Filtering/remove_outliers.py -r Radius
  # - python examples/official/Filtering/remove_outliers.py -r Condition
  # - python examples/official/Filtering/VoxelGrid_160.py
  # - python examples/official/Filtering/statistical_removal.py
  # - python examples/official/IO/pcd_read.py
  # # KdTree
  # - python examples/official/kdtree/kdtree_search.py
  # # keypoints
  # # NG(RangeImage Link Error)
  # - python examples/official/keypoints/narf_keypoint_extraction.py
  # # octree
  # - python examples/official/octree/octree_search.py
  # - python examples/official/Segmentation/cluster_extraction.py
  # - python examples/official/Segmentation/cylinder_segmentation.py
  # - python examples/official/surface/concave_hull_2d.py
  # - python examples/official/surface/resampling.py

after_success:
  # coveralls.io
  - coverage combine
  - coveralls

